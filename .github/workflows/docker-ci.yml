name: Docker CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  lint-build-test:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:latest
        options: >-
          --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint

      - name: Lint with Flake8
        run: |
          # Check for syntax errors and formatting issues
          flake8 ./src --count --select=E9,F63,F7,F82 --show-source --statistics
          # Check PEP8 style (optional)
          flake8 ./src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Lint with Pylint
        run: |
          # Check for unused variables and other issues
          pylint ./src --disable=all --enable=unused-variable,unused-import,undefined-variable --exit-zero

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and cache Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: tweet-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run tests inside Docker
        run: |
          docker run --rm \
            -v $(pwd)/tests:/app/tests \
            -v $(pwd)/src:/app/src \
            -v $(pwd)/data:/app/data \
            -w /app \
            tweet-api \
            python -m pytest